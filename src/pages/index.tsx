import { Button } from '@/components/ui/main/forms/button/Button'
import LinkButton from '@/components/ui/main/forms/button/LinkButton'
import { getServerAuthSession } from '@/server/auth'
import { api } from "@/utils/api"
import { LoadingSpinner } from '@ui/shared/loading-spinner/LoadingSpinner'
import ShowOnly from '@ui/shared/show-only/ShowOnly'
import { GetServerSideProps, type NextPage } from "next"
import { signIn, signOut, useSession } from "next-auth/react"
import Head from "next/head"
import { useRouter } from 'next/router'

const Home: NextPage = () => {
   
   const router = useRouter()
   const { data: sessionData } = useSession()
   
   if(sessionData?.user) {
      router.push('/supermarket')
      return <LoadingSpinner />
   }
   
   return (
      <>
         <Head>
            <title>Create T3 App</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <main className="flex min-h-screen flex-col items-center justify-center">
            <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
               <h1 className="text-5xl font-extrabold tracking-tight">
                  <span className="text-brand-500">Supermarket</span> Inventory
               </h1>
               <div className="flex flex-col items-center gap-2">
                  <AuthShowcase />
               </div>
            </div>
         </main>
      </>
   )
}

export default Home

const AuthShowcase: React.FC = () => {
   const { data: sessionData } = useSession()
   
   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
      undefined, // no input
      { enabled: sessionData?.user !== undefined },
   )
   
   const { data } = api.example.getAll.useQuery()
   
   return (
      <div className="flex flex-col items-center justify-center gap-4">
         <p className="text-center text-2xl">
            {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
         </p>
         <div className="flex items-center gap-2">
            <Button
               intent="primary-outline"
               onClick={sessionData ? () => void signOut() : () => void signIn()}
            >
               {sessionData ? "Sign out" : "Sign in"}
            </Button>
            <ShowOnly when={!!sessionData}>
               <LinkButton to="/supermarket">
                  Dashboard
               </LinkButton>
            </ShowOnly>
         </div>
      </div>
   )
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
   const session = await getServerAuthSession(ctx)
   return {
      props: { session },
   }
}
